name: Flutter CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - develop
jobs:
  flutter_test:
    name: Run flutter test and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: "12-x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Get dependencies
        run: flutter pub get
      - name: Run build runner
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
      - name: Analyze project source
        run: flutter analyze
      - name: Run tests
        run: dart test
  build_appbundle:
    name: Build Android
    needs: [flutter_test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: "12-x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
        env:
          KEY_JKS: ${{secrets.RELEASE_KEYSTORE}}
          SIGNIN_KEY_ALIAS: ${{secrets.RELEASE_KEYSTORE_ALIAS}}
          SIGNIN_KEY_PASSWORD: ${{secrets.RELEASE_KEYSTORE_PASSWORD}}
      - name: Decode Keystore
        run: |
          echo "${{secrets.RELEASE_KEYSTORE}}" > key.jks.asc
          gpg -d --passphrase "${{secrets.RELEASE_KEYSTORE_PASSPHRASE}}"
          - - batch release.keystore.asc > android/key.jks
      - name: Create key.properties
        run: |
          touch android/key.properties
          echo "storePassword"=<storePassword>
          keyPassword=<keyPassword>
          keyAlias=<keyAlias>
          storeFile=../key.jks > ./android/key.properties
      - name: Get dependencies
        run: flutter pub get
      - name: Run build runner
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Build app bundle
        run: flutter build appbundle
      - uses: actions/upload-artifact@v1
        with:
          name: release-appbundle
          path: build/app/outputs/bundle/release/app-release.aab
  deploy_firebase:
    name: Deploy to Firebase App Distribution
    if: github.event_name == 'push'
    needs: [build_appbundle]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: release-appbundle
      - name: Upload Appbundle
        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.1
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: testers
          file: app-release.aab
